<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Scholar-Mapper">
	
	<sql id="deptSearch">
		<if test="dept_cd != null">
			and b.dept_nm = #{dept_nm}
		</if>
	</sql>
	
	<sql id="search">
		
		<if test="grade == '1'.toString()">
			and d.grade = '1'
		</if>
		<if test="grade == '2'.toString()">
			and d.grade = '2'
		</if>
		<if test="grade == '3'.toString()">
			and d.grade = '3'
		</if>
		<if test="grade == '4'.toString()">
			and d.grade = '4'
		</if>
		
		<if test="status_cd == 'CCDW001'.toString()">
			and a.status_cd like 'CCDW001'
		</if>     
		<if test="status_cd == 'CCDW002'.toString()">
			and a.status_cd like 'CCDW002'
		</if>     
		<if test="status_cd == 'CCDW003'.toString()">
			and a.status_cd like 'CCDW003'
		</if>     
		
		
		<if test="student_no != null">
			and a.student_no like '%' || #{student_no} || '%'
		</if>
		
		
	</sql>
	
	<select id="selectDeptNmDeptStaff" resultType="str">
		select dept_nm from department where dept_cd=(select dept_cd from staff where staff_no=#{staff_no})
	</select>
	
	<!-- 공통 -->
	<select id="selectStuDetail" resultType="scholarVO">
		select a.academic_year, c.dept_nm, a.student_no, d.name, trunc(avg(grades_avg),1) as grades_avg, sum(f.class_grade) as regist_score
  		  from grades a, student b, department c, account d, lecture f
		 where a.student_no = b.student_no and
		       b.dept_cd = c.dept_cd and
		       b.account_no = d.account_no and
		       a.class_no = f.class_no and
		       b.student_no = #{student_no} and
		       a.lecture_semester = '202101'
		group by a.academic_year, c.dept_nm, a.student_no, d.name
	</select> 
	
	<!-- 학과조교 -->
	<!-- 해당학과 학생 성적조회 -->
	<select id="selectStudentDeptStaffScoreList" resultType="scholarVO">
		   <include refid="Common-Mapper.PageHeader" />
			select row_number() over (partition by b.dept_nm, d.grade order by avg(a.grades_avg) desc) as rank,
			       trunc(avg(a.grades_avg),1) as grades_avg,
			       d.grade,
			       b.dept_nm,
			       a.student_no, 
			       c.name,
			       f.status_cd, 
			       count(*) as reScore,
			       f.recommend_date
			  from grades a, department b, account c, student d, staff e, scholar f
			 where a.student_no = d.student_no and
			       b.dept_cd = d.dept_cd and
			       c.account_no = d.account_no and 
			       d.dept_cd = e.dept_cd and
			       d.student_no = f.student_no(+) and
			       a.lecture_semester = '202101' and
			       e.staff_no = #{staff_no}
		  group by b.dept_nm,
			       a.student_no, 
			       c.name,
			       f.status_cd,
			       d.grade,
			       f.recommend_date
		    <include refid="search" />
			<include refid="Common-Mapper.PageFooter" />
	</select>
	
	
	<!-- 학과교직원 장학 추천 -->
	<update id="insertDeptStaffScholar">
		insert into scholar
			   values(sysdate, #{sutdent_no}, 0, 'CCDW001')
	</update>
	
	<!-- 장학 추천 취소 -->
	<update id="deleteDeptStaffScholarStu">
		delete from scholar where sutdent_no = #{sutdent_no}
	</update>
	
	<!-- 장학처  -->
	<!-- 전체 리스트 조회 -->
	<select id="selectStudentScholarRecommend" resultType="scholarVO">
		   <include refid="Common-Mapper.PageHeader" />
			select row_number() over (partition by b.dept_nm, d.grade order by avg(a.grades_avg) desc) as rank,
			       trunc(avg(a.grades_avg),1) as grades_avg,
			       d.grade,
			       b.dept_nm,
			       a.student_no, 
			       c.name,
			       f.status_cd, 
	               f.recommend_date,
			       count(*) as reScore
			  from grades a, department b, account c, student d, scholar f
			 where a.student_no = d.student_no and
			       b.dept_cd = d.dept_cd and
			       c.account_no = d.account_no and 
			       d.student_no = f.student_no(+) and
			       a.lecture_semester = '202101'
			group by b.dept_nm,
			        a.student_no, 
			        c.name,
			        f.status_cd,
			        d.grade,
	                f.recommend_date
		   <include refid="deptSearch" />
		   <include refid="search" />
		   <include refid="Common-Mapper.PageFooter" />
	</select>
	
	
	<!-- 장학처 승인 -->
	<update id="updateScholarStaffStu">
		update scholar 
		   set status_cd = 'CCDW002',
		       scholar_amount = #{scholar_amount}
		 where student_no = #{student_no} and
		   	   recommend_date = #{recommend_date} 
	</update>
		
			
	<update id="DeleteScholarStaffStu">
		update scholar 
		   set status_cd = 'CCDW003',
		 where student_no = #{student_no} and
		   	   recommend_date = #{recommend_date} 
	</update>	
</mapper>