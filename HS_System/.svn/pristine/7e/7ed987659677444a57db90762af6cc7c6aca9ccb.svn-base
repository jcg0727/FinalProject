package kr.ac.hs.controller.scholar;

import java.sql.SQLException;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.ac.hs.command.SearchCriteria;
import kr.ac.hs.command.applicant.StaffApplicantCommand;
import kr.ac.hs.dto.AccountVO;
import kr.ac.hs.dto.applicant.StaffApplicantVO;
import kr.ac.hs.dto.scholar.ScholarVO;
import kr.ac.hs.service.applicant.StaffApplicantService;
import kr.ac.hs.service.scholar.ScholarService;

@Controller
//@RequestMapping("/academic/admission")
public class ScholarController {
	
	@Autowired
	private ScholarService service;
	
	@RequestMapping("/tuition/management")
	public ModelAndView ScholarMain(SearchCriteria cri, ModelAndView mnv, HttpSession session, Map<String,Object> dataMap) throws Exception{
		String url = "scholar/staff/scholarManagement";
		
		AccountVO loginUser = (AccountVO) session.getAttribute("loginUser");
		cri.setPerPageNum(5);
		
		dataMap.put("cri", cri);
		dataMap.put("staff_no", loginUser.getId());
		
		if(loginUser.getAuthority_cd().equals("ROLE_STAFF")) {
			dataMap = service.getStudentDeptStaffScoreList(dataMap);
		}
		mnv.addObject("dataMap",dataMap);
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping("/tuition/management/recommendDeptRegistStu")
	@ResponseBody
	public ResponseEntity<String> regist(@RequestParam("student_no") String student_no ) throws Exception{
		ResponseEntity<String> entity = null;
		
		try {
			
			service.registDeptStaffScholar(student_no);
			entity = new ResponseEntity<String>(HttpStatus.OK);
		}catch(Exception e) {
			entity = new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
		}
		return entity;
	}
	
	@RequestMapping("/tuition/management/remove")
	@ResponseBody
	public ResponseEntity<String> remove(String student_no) throws Exception{
		
		ResponseEntity<String> entity = null;
		try {
			service.removeDeptStaffScholarStu(student_no);
			entity = new ResponseEntity<String>(HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
		}
		return entity;
	}
}
