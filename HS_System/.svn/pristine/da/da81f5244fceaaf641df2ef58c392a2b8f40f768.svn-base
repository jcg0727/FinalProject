package kr.ac.hs.dao.scholar;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.session.SqlSession;

import kr.ac.hs.command.SearchCriteria;
import kr.ac.hs.dto.scholar.ScholarVO;

public class ScholarDAOImpl implements ScholarDAO{
	
	private SqlSession session;
	private String namespace = "Scholar-Mapper.";
	
	public void setSqlSession(SqlSession session) {
		this.session = session;
	}

	@Override
	public List<ScholarVO> selectStudentDeptStaffScoreList(Map<String, Object> dataMap) throws SQLException {
		
		SearchCriteria cri = (SearchCriteria) dataMap.get("cri");
		int offset = cri.getStartRowNum();
		int limit = cri.getPerPageNum();
		RowBounds rowBounds = new RowBounds(offset, limit);
		
		List<ScholarVO> deptStaffScoreList = session.selectList(namespace + "selectStudentDeptStaffScoreList", dataMap, rowBounds);
		return deptStaffScoreList;
	}

	@Override
	public void insertDeptStaffScholar(String student_no) throws SQLException {
		session.update(namespace + "insertDeptStaffScholar", student_no);
	}

	@Override
	public void deleteDeptStaffScholarStu(String student_no) throws SQLException {
		session.update(namespace + "deleteDeptStaffScholarStu", student_no);
	}

	@Override
	public List<ScholarVO> selectStudentScholarRecommend(Map<String, Object> dataMap) throws SQLException {
		SearchCriteria cri = (SearchCriteria) dataMap.get("cri");
		int offset = cri.getStartRowNum();
		int limit = cri.getPerPageNum();
		RowBounds rowBounds = new RowBounds(offset, limit);
		List<ScholarVO> staffScholarList = session.selectList(namespace + "selectStudentScholarRecommend", dataMap, rowBounds);
		return staffScholarList;
	}

	@Override
	public void updateScholarStaffStu(ScholarVO scholarVO) throws SQLException {
		session.update(namespace + "updateScholarStaffStu", scholarVO);
	}

	@Override
	public void DeleteScholarStaffStu(ScholarVO scholarVO) throws SQLException {
		session.update(namespace + "DeleteScholarStaffStu",scholarVO);
	}
	

	
}
